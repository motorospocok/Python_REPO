#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Feb 21, 2021 10:54:27 PM CET  platform: Windows NT

# This program helps to control the MTS matrix remotely over IP
# Supported Matrix type SCF - 0600 Standard Coupling unit by MTS Systemtechnik
# Current version works wihout feedback from the unit, sending the TPC packets, but do not receive anything from the Matrix
# It is required to have MTS_matrix_V2.py together
# Version 1.21 - 2021 Feb23 First version provided to public
# Version 1.22 - 2021 Marc3 Fixed save menu issues

import sys
import socket
import struct
import time
import binascii
import ipaddress
from tkinter.filedialog import askopenfilename
from tkinter.filedialog import asksaveasfile



try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global che1
    che1 = tk.IntVar()
    global che2
    che2 = tk.IntVar()
    global che3
    che3 = tk.IntVar()
    global che4
    che4 = tk.IntVar()
    global che5
    che5 = tk.IntVar()
    global che6
    che6 = tk.IntVar()
    global che7
    che7 = tk.IntVar()
    global che8
    che8 = tk.IntVar()
    global che9
    che9 = tk.IntVar()
    global che10
    che10 = tk.IntVar()
    global che11
    che11 = tk.IntVar()
    global che12
    che12 = tk.IntVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def Step_Matrix_MAX(matrix_NUM):
    obj_convert = str("w.Display") + str(matrix_NUM)
    object1 = eval(obj_convert)
    object1.delete(0,2)
    object1.insert(0,str("95"))
    current_att = 95
    val = 'A' + str(matrix_NUM) + 'P' + str(current_att)
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'    
    send_tcp_packet(m2)

def Step_Matrix_MIN(matrix_NUM):
    obj_convert = str("w.Display") + str(matrix_NUM)
    object1 = eval(obj_convert)
    object1.delete(0,2)
    object1.insert(0,str("0"))
    current_att = 0
    val = 'A' + str(matrix_NUM) + 'P' + str(current_att)
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'    
    send_tcp_packet(m2)

def Step_Matrix_Down(matrix_NUM):

    #Converting string name to Class object
    obj_convert = str("w.Display") + str(matrix_NUM)
    object1 = eval(obj_convert)
    
    current_att = eval(object1.get())
        
    if current_att > 95:
        object1.delete(0,2)
        object1.insert(0,str("95"))
        current_att = 95

    if current_att < 0:
        object1.delete(0,2)
        object1.insert(0,str("0"))
        current_att = 0
       
    if current_att > 0:
        current_att = current_att - 1
        object1.delete(0,2)
        object1.insert(0,str(current_att))

    val = 'A' + str(matrix_NUM) + 'P' + str(current_att)
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'
    send_tcp_packet(m2)

def Step_Matrix_UP(matrix_NUM):

    #Converting string name to Class object
    obj_convert = str("w.Display") + str(matrix_NUM)
    object1 = eval(obj_convert)
    
    current_att = eval(object1.get())
        
    if current_att > 95:
        object1.delete(0,2)
        object1.insert(0,str("95"))
        current_att = 95

    if current_att < 0:
        object1.delete(0,2)
        object1.insert(0,str("0"))
        current_att = 0
       
    if current_att < 95:
        current_att = current_att + 1
        object1.delete(0,2)
        object1.insert(0,str(current_att))
        
    val = 'A' + str(matrix_NUM) + 'P' + str(current_att)
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'
    send_tcp_packet(m2)

def send_tcp_packet(packet_to_be_send):
    #Converting TCP IP data from GUI to valid IP address
    #For socket operations and data sending TCP
    TCP_IP1 = w.IP_address_in.get()    
    TCP_IP2 = ipaddress.IPv4Address(TCP_IP1)
    TCP_IP = str(TCP_IP2)
    TCP_PORT = eval(w.IP_port_in.get()) 

    MESSAGE = binascii.unhexlify(packet_to_be_send)    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((TCP_IP, TCP_PORT))
    s.send(MESSAGE)
    s.close()


def Check_connection_Click(p1):
    
    TCP_IP1 = w.IP_address_in.get()    
    TCP_IP2 = ipaddress.IPv4Address(TCP_IP1)
    TCP_IP = str(TCP_IP2)
    TCP_PORT = eval(w.IP_port_in.get())   
    location = (TCP_IP,TCP_PORT)
    BUFFER_SIZE = 1024
    sys.stdout.flush()
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    result_of_check = s.connect_ex(location)
    if result_of_check == 0:
       w.Entry1.delete(0,11)
       w.Entry1.insert(0,"CONNECT OK")
    else:
       w.Entry1.delete(0,11)
       w.Entry1.insert(0,"ERROR")


def Dw10_Left_Click(p1):
    Step_Matrix_Down(10)

def Dw10_Right_Click(p1):    
    Step_Matrix_MIN(10)

def Dw11_Left_Click(p1):
    Step_Matrix_Down(11)

def Dw11_Right_Click(p1):
    Step_Matrix_MIN(11)

def Dw12_Left_Click(p1):
    Step_Matrix_Down(12)

def Dw12_Right_Left(p1):
    Step_Matrix_MIN(12)

def Dw1_Left_Click(p1):
    Step_Matrix_Down(1)

def Dw1_Right_Click(p1):
    Step_Matrix_MIN(1)

def Dw2_Left_Click(p1):
    Step_Matrix_Down(2)

def Dw2_Right_Click(p1):
    Step_Matrix_MIN(2)

def Dw3_Left_Click(p1):
    Step_Matrix_Down(3)

def Dw3_Right_Click(p1):
    Step_Matrix_MIN(3)

def Dw4_Left_Click(p1):
    Step_Matrix_Down(4)

def Dw4_Right_Click(p1):
    Step_Matrix_MIN(4)

def Dw5_Left_Click(p1):
    Step_Matrix_Down(5)

def Dw5_Right_Click(p1):
    Step_Matrix_MIN(5)

def Dw6_Left_Click(p1):
    Step_Matrix_Down(6)

def Dw6_Right_Click(p1):
    Step_Matrix_MIN(6)

def Dw7_Left_Click(p1):
    Step_Matrix_Down(7)

def Dw7_Right_Click(p1):
    Step_Matrix_MIN(7)

def Dw8_Left_Click(p1):
    Step_Matrix_Down(8)

def Dw8_Right_Clik(p1):
    Step_Matrix_MIN(8)

def Dw9_Left_Click(p1):
    Step_Matrix_Down(9)

def Dw9_Rigth_Click(p1):
    Step_Matrix_MIN(9)

def GR_Dw_Left_Click(p1):
    val = ""
    if che1.get() == 1:
       obj_convert = str("w.Display1")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val1 = 'A' + str("1") + 'P' + str(current_att)
       val = val+val1
       
    if che2.get() == 1:
       obj_convert = str("w.Display2")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val2 = 'A' + str("2") + 'P' + str(current_att)
       val = val+val2
       
    if che3.get() == 1:
       obj_convert = str("w.Display3")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val3 = 'A' + str("3") + 'P' + str(current_att)
       val = val+val3
       
    if che4.get() == 1:
       obj_convert = str("w.Display4")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val4 = 'A' + str("4") + 'P' + str(current_att)
       val = val+val4

    if che5.get() == 1:
       obj_convert = str("w.Display5")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val5 = 'A' + str("5") + 'P' + str(current_att)
       val = val+val5

    if che6.get() == 1:
       obj_convert = str("w.Display6")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val6 = 'A' + str("6") + 'P' + str(current_att)
       val = val+val6

    if che7.get() == 1:
       obj_convert = str("w.Display7")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val7 = 'A' + str("7") + 'P' + str(current_att)
       val = val+val7

    if che8.get() == 1:
       obj_convert = str("w.Display8")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val8 = 'A' + str("8") + 'P' + str(current_att)
       val = val+val8

    if che9.get() == 1:
       obj_convert = str("w.Display9")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val9 = 'A' + str("9") + 'P' + str(current_att)
       val = val+val9
       
    if che10.get() == 1:
       obj_convert = str("w.Display10")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val10 = 'A' + str("10") + 'P' + str(current_att)
       val = val+val10
       
    if che11.get() == 1:
       obj_convert = str("w.Display11")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val11 = 'A' + str("11") + 'P' + str(current_att)
       val = val+val11
       
    if che12.get() == 1:
       obj_convert = str("w.Display12")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att > 0:
              current_att = current_att - 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val12 = 'A' + str("12") + 'P' + str(current_att)
       val = val+val12
    print(val)
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'
    send_tcp_packet(m2)

def GR_Dw_Right_click(p1):
    val = ""
    if che1.get() == 1:
       w.Display1.delete(0,2)
       w.Display1.insert(0,str("0"))
       current_att = 0
       val1 = 'A' + str("1") + 'P' + str("0")
       val = val + val1

    if che2.get() == 1:
       w.Display2.delete(0,2)
       w.Display2.insert(0,str("0"))
       current_att = 0
       val2 = 'A' + str("2") + 'P' + str("0")
       val = val + val2

    if che3.get() == 1:
       w.Display3.delete(0,2)
       w.Display3.insert(0,str("0"))
       current_att = 0
       val3 = 'A' + str("3") + 'P' + str("0")
       val = val + val3

    if che4.get() == 1:
       w.Display4.delete(0,2)
       w.Display4.insert(0,str("0"))
       current_att = 0
       val4 = 'A' + str("4") + 'P' + str("0")
       val = val + val4

    if che5.get() == 1:
       w.Display5.delete(0,2)
       w.Display5.insert(0,str("0"))
       current_att = 0
       val5 = 'A' + str("5") + 'P' + str("0")
       val = val + val5

    if che6.get() == 1:
       w.Display6.delete(0,2)
       w.Display6.insert(0,str("0"))
       current_att = 0
       val6 = 'A' + str("6") + 'P' + str("0")
       val = val + val6

    if che7.get() == 1:
       w.Display7.delete(0,2)
       w.Display7.insert(0,str("0"))
       current_att = 0
       val7 = 'A' + str("7") + 'P' + str("0")
       val = val + val7

    if che8.get() == 1:
       w.Display8.delete(0,2)
       w.Display8.insert(0,str("0"))
       current_att = 0
       val8 = 'A' + str("8") + 'P' + str("0")
       val = val + val8

    if che9.get() == 1:
       w.Display9.delete(0,2)
       w.Display9.insert(0,str("0"))
       current_att = 0
       val9 = 'A' + str("9") + 'P' + str("0")
       val = val + val9

    if che10.get() == 1:
       w.Display10.delete(0,2)
       w.Display10.insert(0,str("0"))
       current_att = 0
       val10 = 'A' + str("10") + 'P' + str("0")
       val = val + val10

    if che11.get() == 1:
       w.Display11.delete(0,2)
       w.Display11.insert(0,str("0"))
       current_att = 0
       val11 = 'A' + str("11") + 'P' + str("0")
       val = val + val11

    if che12.get() == 1:
       w.Display12.delete(0,2)
       w.Display12.insert(0,str("0"))
       current_att = 0
       val12 = 'A' + str("12") + 'P' + str("0")
       val = val + val12
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'    
    send_tcp_packet(m2)

def GR_Up_Left_Click(p1):
    val = ""
    if che1.get() == 1:
       obj_convert = str("w.Display1")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val1 = 'A' + str("1") + 'P' + str(current_att)
       val = val+val1
       
    if che2.get() == 1:
       obj_convert = str("w.Display2")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val2 = 'A' + str("2") + 'P' + str(current_att)
       val = val+val2
       
    if che3.get() == 1:
       obj_convert = str("w.Display3")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val3 = 'A' + str("3") + 'P' + str(current_att)
       val = val+val3
       
    if che4.get() == 1:
       obj_convert = str("w.Display4")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val4 = 'A' + str("4") + 'P' + str(current_att)
       val = val+val4

    if che5.get() == 1:
       obj_convert = str("w.Display5")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val5 = 'A' + str("5") + 'P' + str(current_att)
       val = val+val5

    if che6.get() == 1:
       obj_convert = str("w.Display6")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val6 = 'A' + str("6") + 'P' + str(current_att)
       val = val+val6

    if che7.get() == 1:
       obj_convert = str("w.Display7")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val7 = 'A' + str("7") + 'P' + str(current_att)
       val = val+val7

    if che8.get() == 1:
       obj_convert = str("w.Display8")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val8 = 'A' + str("8") + 'P' + str(current_att)
       val = val+val8

    if che9.get() == 1:
       obj_convert = str("w.Display9")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val9 = 'A' + str("9") + 'P' + str(current_att)
       val = val+val9
       
    if che10.get() == 1:
       obj_convert = str("w.Display10")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val10 = 'A' + str("10") + 'P' + str(current_att)
       val = val+val10
       
    if che11.get() == 1:
       obj_convert = str("w.Display11")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val11 = 'A' + str("11") + 'P' + str(current_att)
       val = val+val11
       
    if che12.get() == 1:
       obj_convert = str("w.Display12")
       object1 = eval(obj_convert)
       current_att = eval(object1.get())
       if current_att > 95:
              object1.delete(0,2)
              object1.insert(0,str("95"))
              current_att = 95
       if current_att < 0:
              object1.delete(0,2)
              object1.insert(0,str("0"))
              current_att = 0
       if current_att < 95:
              current_att = current_att + 1
              object1.delete(0,2)
              object1.insert(0,str(current_att))
       val12 = 'A' + str("12") + 'P' + str(current_att)
       val = val+val12
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'    
    send_tcp_packet(m2)

def GR_Up_Right_Click(p1):
    val = ""
    if che1.get() == 1:
       w.Display1.delete(0,2)
       w.Display1.insert(0,str("95"))
       current_att = 95
       val1 = 'A' + str("1") + 'P' + str("95")
       val = val + val1

    if che2.get() == 1:
       w.Display2.delete(0,2)
       w.Display2.insert(0,str("95"))
       current_att = 95
       val2 = 'A' + str("2") + 'P' + str("95")
       val = val + val2

    if che3.get() == 1:
       w.Display3.delete(0,2)
       w.Display3.insert(0,str("95"))
       current_att = 95
       val3 = 'A' + str("3") + 'P' + str("95")
       val = val + val3

    if che4.get() == 1:
       w.Display4.delete(0,2)
       w.Display4.insert(0,str("95"))
       current_att = 95
       val4 = 'A' + str("4") + 'P' + str("95")
       val = val + val4

    if che5.get() == 1:
       w.Display5.delete(0,2)
       w.Display5.insert(0,str("95"))
       current_att = 95
       val5 = 'A' + str("5") + 'P' + str("95")
       val = val + val5

    if che6.get() == 1:
       w.Display6.delete(0,2)
       w.Display6.insert(0,str("95"))
       current_att = 95
       val6 = 'A' + str("6") + 'P' + str("95")
       val = val + val6

    if che7.get() == 1:
       w.Display7.delete(0,2)
       w.Display7.insert(0,str("95"))
       current_att = 95
       val7 = 'A' + str("7") + 'P' + str("95")
       val = val + val7

    if che8.get() == 1:
       w.Display8.delete(0,2)
       w.Display8.insert(0,str("95"))
       current_att = 95
       val8 = 'A' + str("8") + 'P' + str("95")
       val = val + val8

    if che9.get() == 1:
       w.Display9.delete(0,2)
       w.Display9.insert(0,str("95"))
       current_att = 95
       val9 = 'A' + str("9") + 'P' + str("95")
       val = val + val9

    if che10.get() == 1:
       w.Display10.delete(0,2)
       w.Display10.insert(0,str("95"))
       current_att = 95
       val10 = 'A' + str("10") + 'P' + str("95")
       val = val + val10

    if che11.get() == 1:
       w.Display11.delete(0,2)
       w.Display11.insert(0,str("95"))
       current_att = 95
       val11 = 'A' + str("11") + 'P' + str("95")
       val = val + val11

    if che12.get() == 1:
       w.Display12.delete(0,2)
       w.Display12.insert(0,str("95"))
       current_att = 95
       val12 = 'A' + str("12") + 'P' + str("95")
       val = val + val12
    message1 = val.encode('utf-8')
    m1 = message1.hex()
    m2 = '02' + m1 + '03'    
    send_tcp_packet(m2)

def Up10_Left_Click(p1):
    Step_Matrix_UP(10)

def Up10_Right_Click(p1):
    Step_Matrix_MAX(10)

def Up11_Left_Click(p1):
    Step_Matrix_UP(11)

def Up11_Right_Click(p1):
    Step_Matrix_MAX(11)

def Up12_Left_Click(p1):
    Step_Matrix_UP(12)

def Up12_Right_Click(p1):
    Step_Matrix_MAX(12)

def Up1_Left_Click(p1):
    Step_Matrix_UP(1)

def Up1_Right_Click(p1):
    Step_Matrix_MAX(1)

def Up2_Left_Click(p1):
    Step_Matrix_UP(2)

def Up2_Right_Click(p1):
    Step_Matrix_MAX(2)

def Up3_Left_Click(p1):
    Step_Matrix_UP(3)

def Up3_Right_Click(p1):
    Step_Matrix_MAX(3)

def Up4_Left_Click(p1):
    Step_Matrix_UP(4)

def Up4_Right_Click(p1):
    Step_Matrix_MAX(4)

def Up5_Left_Click(p1):
    Step_Matrix_UP(5)

def Up5_Right_Click(p1):
    Step_Matrix_MAX(5)

def Up6_Left_Click(p1):
    Step_Matrix_UP(6)

def Up6_Right_Click(p1):
    Step_Matrix_MAX(6)

def Up7_Left_Click(p1):
    Step_Matrix_UP(7)

def Up7_Right_Click(p1):
    Step_Matrix_MAX(7)

def Up8_Left_Click(p1):
    Step_Matrix_UP(8)

def Up8_Right_Click(p1):
    Step_Matrix_MAX(8)

def Up9_Left_Click(p1):
    Step_Matrix_UP(9)

def Up9_Right_Click(p1):
    Step_Matrix_MAX(9)

def Load_File():
    name = askopenfilename(initialdir="C:/1/pytonWin/",
                           filetypes =(("Text File", "*.txt"),("All Files","*.*")),
                           title = "Choose a file."
                           )
    print (name)
    
    #Using try in case user types in unknown file or closes without choosing a file.
    
    c = 1
    try:
        with open(name) as f:
         
        #Content_list is the list that contains the read lines.     
             for line in f:
                 obj_convert = str("w.CellName") + str(c)
                 object1 = eval(obj_convert)
                 object1.delete(0,15)
                 object1.insert(0,str(line))
                 if c < 12:
                    c = c + 1
    except:
           print("No File Selected")

def Save_File():
    ext_data = [('All tyes(*.*)', '*.txt')]
    f = asksaveasfile(mode='w', defaultextension=ext_data)
    print(f)
    c = 1
    if f:
         for x in range(1,13):
             obj_convert = str("w.CellName") + str(x)
             object1 = eval(obj_convert)
             alma = object1.get()
             
             if not alma:
                alma = "\n"
             else:
                alma = alma+"\n"
             f.write(alma)
         f.close()

def About():

    popup = tk.Tk()
    popup.wm_title("!")
    label = ttk.Label(popup, text="Version 1.22 - 2021 Feb24", font="TkFixedFont")
    label.pack(side="top", fill="x", pady=10)
    B1 = ttk.Button(popup, text="Okay", command = popup.destroy)
    B1.pack()
    popup.mainloop()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import MTS_matrix_V2
    MTS_matrix_V2.vp_start_gui()

